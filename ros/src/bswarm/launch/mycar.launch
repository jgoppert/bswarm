<launch>

  <node pkg="tf2_ros" type="static_transform_publisher" name="hokuyo_tf" args="0 0 0.05 0 0 0 base_link hokuyo_link"/>

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find bswarm)/launch/mycar.rviz"/>
  <node pkg="bswarm" type="mycar_controller.py" name="mycar_controller" output="screen"/>

  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find bswarm)/config/mrpt_rbpf/rosconsole.config"/>
    
  <node pkg="mrpt_rbpf_slam" type="mrpt_rbpf_slam" name="mrpt_rbpf_slam" output="screen">
    <param name="ini_filename" value="$(find mrpt_rbpf_slam)/tutorial/grid_slam_demo.ini"/>
    <param name="odom_frame_id" value="odom"/>
    <param name="global_frame_id" value="map"/>
    <param name="base_frame_id" value="base_link"/>
    <!--for multiple sensors, place comma eg "r1/front_laser/scan,/beacon" -->
    <param name="sensor_source" value="mycar/laser/scan"/>
    <rosparam command="load" file="$(find bswarm)/config/mrpt_rbpf/default.yaml" /> 
  </node>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
       rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
       launch files, but it does nothing. -->
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="true"/>
  <arg name="nogpu" default="false"/>

  <arg unless="$(arg nogpu)" name="world_name" value="$(find bswarm)/worlds/cafe.world"/>
  <arg     if="$(arg nogpu)" name="world_name" value="$(find bswarm)/worlds/cafe_nogpu.world"/>

  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>
  <arg name="enable_ros_network" default="true" />

  <!-- set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

  <!-- start gazebo server-->
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <group>
    <param name="gazebo/enable_ros_network" value="$(arg enable_ros_network)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="screen"
	args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" />

  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" args="$(arg command_arg3)"/>
  </group>

</launch>
